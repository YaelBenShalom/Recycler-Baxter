#! /usr/bin/python3

# Copyright (c) 2013-2015, Rethink Robotics
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the Rethink Robotics nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import os
import sys
import argparse
import rospy
import cv2
import cv_bridge
from sensor_msgs.msg import Image
from can_sort.srv import DisplayImage, DisplayImageResponse


class Display_Image:
    def __init__(self):
        """ Initialize environment
        """
        self.display_srv = rospy.Service('display_image', DisplayImage, self.send_image_srv)
        rospy.logdebug(f"Service initialized")

    def send_image_srv(self, req):
        """
        Send the image located at the specified path to the head
        display on Baxter.
        @param path: path to the image file to load and send
        """
        #### WE WANT TO PASS A PATH INSTEAD OF USING THE ABOLUTE PATH
        if req.img_num == 1:
            path = "/home/kailey/ME495/final_project/ws/src/head_images/recycle.jpg"

        elif req.img_num == 2:
            path = "/home/kailey/ME495/final_project/ws/src/head_images/dr_pepper.png"

        elif req.img_num == 3:
            path = "/home/kailey/ME495/final_project/ws/src/head_images/juice.png"

        elif req.img_num == 4:
            path = "/home/kailey/ME495/final_project/ws/src/head_images/happy_bin.png"

        elif req.img_num == 5:
            path = "/home/kailey/ME495/final_project/ws/src/head_images/mystery_man.png"

        img = cv2.imread(path)
        msg = cv_bridge.CvBridge().cv2_to_imgmsg(img, encoding="bgr8")
        pub = rospy.Publisher('/robot/xdisplay', Image, latch=True, queue_size=1)
        pub.publish(msg)
        rospy.sleep(1)
        return DisplayImageResponse()


def main():
    rospy.init_node('disp_img', anonymous=True)
    display = Display_Image()
    rospy.spin()


if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass
