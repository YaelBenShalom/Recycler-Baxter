#! /usr/bin/env python3

import sys
import rospy
import numpy as np
import math
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
import baxter_core_msgs
import baxter_interface
import std_msgs.msg
import cv2
import cv_bridge 
import can_sort
from geometry_msgs.msg import PoseStamped, Pose, Point, Quaternion
from baxter_core_msgs.msg import EndEffectorState 
from moveit_commander import MoveGroupCommander
from baxter_interface import Gripper, CHECK_VERSION
from moveit_commander import RobotCommander
from numpy import result_type
from can_sort.msg import Object
from can_sort.srv import Board, BoardResponse

class totty_botty:

    def __init__(self):
        self.get_pos = rospy.ServiceProxy('board_state', Board)
        hm = self.get_pos(use_real = True)
        print(f" found {len(hm.objects)} objects")
        # print(hm)
        # print("")
        #  print(hm.objects[0].location.x)
        # print(hm.objects[0].location.y)

        obj_x = []
        obj_y = []

        for item in hm.objects:
                obj_x.append(item.location.x)
                obj_y.append(item.location.y)

        print(f"x list {obj_x}")
        print(f"y list {obj_y}")





if __name__ == "__main__":
        rospy.init_node("test_vision", anonymous = False)
        node = totty_botty()
        rospy.spin()